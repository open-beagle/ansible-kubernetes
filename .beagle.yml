kind: pipeline
name: dev

trigger:
  branch:
    - dev

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.wodcloud.com
      access_key:
        from_secret: ACCESS_KEY_MINIO
      secret_key:
        from_secret: SECRET_KEY_MINIO

  - name: fetch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: version
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_VERSION: v1.26.15
      K8S_RELEASE: v1.26
    commands:
      - |
        sed -i --expression "s?K8S_VERSION:.*?K8S_VERSION: \"$K8S_VERSION\"?" linux/group_vars/all.yml
      - |
        sed -i --expression "s?K8S_VERSION=.*?K8S_VERSION=\"\$\{K8S_VERSION\:\-$K8S_VERSION\}\"?" install-offline.sh
      - |
        sed -i --expression "s?K8S_VERSION=.*?K8S_VERSION=\"\$\{K8S_VERSION\:\-$K8S_VERSION\}\"?" install.sh

  - name: curl
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      CILIUM_VERSION: 1.14.14
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/charts/beagle-cilium-$CILIUM_VERSION.tgz > ./linux/roles/wod.cilium/files/beagle-cilium-$CILIUM_VERSION.tgz

  - name: install-docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_ARCH: amd64
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz > ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/install.sh > ./linux/roles/wod.docker/templates/install.sh
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/uninstall.sh > ./linux/roles/wod.docker/templates/uninstall.sh
      - |
        sed -i --expression "s?DOCKER_VERSION=.*?DOCKER_VERSION=\"\$\{DOCKER_VERSION\:-$DOCKER_VERSION\}\"?" ./linux/roles/wod.docker/templates/install.sh

  - name: ansible-docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_VERSION: v1.26.15
      K8S_RELEASE: v1.26
      K8S_ARCH: amd64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH .tmp/docker/$K8S_ARCH
      - cp ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz .tmp/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz
      - cp ./linux/roles/wod.docker/templates/install.sh .tmp/docker/$K8S_ARCH/install.sh
      - cp ./linux/roles/wod.docker/templates/uninstall.sh .tmp/docker/$K8S_ARCH/uninstall.sh
      - tar czvf .tmp/$K8S_RELEASE/$K8S_ARCH/ansible-docker-$K8S_VERSION-$K8S_ARCH.tgz -C .tmp/docker/$K8S_ARCH .
      - rm -rf .tmp/docker

  - name: install-registry-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/registry:v2.8.1-amd64
    commands:
      - cp /usr/local/bin/registry linux/roles/wod.registry/files/bin/registry-v2.8.1

  - name: install-gateway-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/awecloud-gateway:v6.1.1-amd64
    commands:
      - cp /usr/local/bin/gateway linux/roles/wod.gateway/files/gateway-v6.1.1

  - name: group-vars-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_ARCH: amd64
    commands:
      - |
        sed -i --expression "s?K8S_ARCH:.*?K8S_ARCH: $K8S_ARCH?" ./linux/group_vars/all.yml

  - name: docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/ansible:2-amd64
      repo: wod/ansible-kubernetes
      version: v1.26.15
      channel: amd64
      args: "TARGETOS=linux,TARGETARCH=amd64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: install-docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_ARCH: arm64
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz > ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/install.sh > ./linux/roles/wod.docker/templates/install.sh
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/uninstall.sh > ./linux/roles/wod.docker/templates/uninstall.sh
      - |
        sed -i --expression "s?DOCKER_VERSION=.*?DOCKER_VERSION=\"\$\{DOCKER_VERSION\:-$DOCKER_VERSION\}\"?" ./linux/roles/wod.docker/templates/install.sh

  - name: ansible-docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_VERSION: v1.26.15
      K8S_RELEASE: v1.26
      K8S_ARCH: arm64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH .tmp/docker/$K8S_ARCH
      - cp ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz .tmp/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz
      - cp ./linux/roles/wod.docker/templates/install.sh .tmp/docker/$K8S_ARCH/install.sh
      - cp ./linux/roles/wod.docker/templates/uninstall.sh .tmp/docker/$K8S_ARCH/uninstall.sh
      - tar czvf .tmp/$K8S_RELEASE/$K8S_ARCH/ansible-docker-$K8S_VERSION-$K8S_ARCH.tgz -C .tmp/docker/$K8S_ARCH .
      - rm -rf .tmp/docker

  - name: install-registry-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/registry:v2.8.1-arm64
    commands:
      - rm -rf ./linux/roles/wod.registry/files/bin/registry-*
      - cp /usr/local/bin/registry ./linux/roles/wod.registry/files/bin/registry-v2.8.1

  - name: install-gateway-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/awecloud-gateway:v6.1.1-arm64
    commands:
      - cp /usr/local/bin/gateway linux/roles/wod.gateway/files/gateway-v6.1.1

  - name: group-vars-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_ARCH: arm64
    commands:
      - |
        sed -i --expression "s?K8S_ARCH:.*?K8S_ARCH: $K8S_ARCH?" ./linux/group_vars/all.yml

  - name: docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/ansible:2-arm64
      repo: wod/ansible-kubernetes
      version: v1.26.15
      channel: arm64
      args: "TARGETOS=linux,TARGETARCH=arm64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.26.15-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.26.15
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: ansible-kubernetes-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    environment:
      REGISTRY_REMOTE: registry.cn-qingdao.aliyuncs.com/wod
      K8S_REPO: ansible-kubernetes
      K8S_VERSION: v1.26.15
      K8S_RELEASE: v1.26
      K8S_ARCH: amd64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH
      - cp install-offline.sh .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION.sh
      - docker pull $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH
      - docker save $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH | gzip > .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION-$K8S_ARCH.tgz

  - name: ansible-kubernetes-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    environment:
      REGISTRY_REMOTE: registry.cn-qingdao.aliyuncs.com/wod
      K8S_REPO: ansible-kubernetes
      K8S_VERSION: v1.26.15
      K8S_RELEASE: v1.26
      K8S_ARCH: arm64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH
      - cp install-offline.sh .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION.sh
      - docker pull $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH
      - docker save $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH | gzip > .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION-$K8S_ARCH.tgz

  - name: minio
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: ACCESS_KEY_MINIO
      S3_SECRET_KEY:
        from_secret: SECRET_KEY_MINIO
    commands:
      - mc alias set cache --api=S3v4 https://cache.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp --recursive .tmp/v1.26 cache/kubernetes/k8s/ansible
      - mc cp install.sh cache/kubernetes/install.sh
      - mc cp install-offline.sh cache/kubernetes/install-offline.sh

---
kind: pipeline
name: main

trigger:
  branch:
    - main

clone:
  disable: true

steps:
  - name: harbor-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.26.15-amd64
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:latest-amd64
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.26.15-arm64
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:latest-arm64
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:latest-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:latest
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

---
kind: pipeline
name: release-1.26

trigger:
  branch:
    - release-1.26

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.wodcloud.com
      access_key:
        from_secret: ACCESS_KEY_MINIO
      secret_key:
        from_secret: SECRET_KEY_MINIO

  - name: fetch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: version
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_VERSION: v1.26.15
      K8S_RELEASE: v1.26
    commands:
      - |
        sed -i --expression "s?K8S_VERSION:.*?K8S_VERSION: \"$K8S_VERSION\"?" linux/group_vars/all.yml
      - |
        sed -i --expression "s?K8S_VERSION=.*?K8S_VERSION=\"\$\{K8S_VERSION\:\-$K8S_VERSION\}\"?" install-offline.sh
      - |
        sed -i --expression "s?K8S_VERSION=.*?K8S_VERSION=\"\$\{K8S_VERSION\:\-$K8S_VERSION\}\"?" install.sh

  - name: curl
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      CILIUM_VERSION: 1.14.14
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/charts/beagle-cilium-$CILIUM_VERSION.tgz > ./linux/roles/wod.cilium/files/beagle-cilium-$CILIUM_VERSION.tgz

  - name: install-docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_ARCH: amd64
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz > ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/install.sh > ./linux/roles/wod.docker/templates/install.sh
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/uninstall.sh > ./linux/roles/wod.docker/templates/uninstall.sh
      - |
        sed -i --expression "s?DOCKER_VERSION=.*?DOCKER_VERSION=\"\$\{DOCKER_VERSION\:-$DOCKER_VERSION\}\"?" ./linux/roles/wod.docker/templates/install.sh

  - name: ansible-docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_VERSION: v1.26.15
      K8S_RELEASE: v1.26
      K8S_ARCH: amd64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH .tmp/docker/$K8S_ARCH
      - cp ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz .tmp/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz
      - cp ./linux/roles/wod.docker/templates/install.sh .tmp/docker/$K8S_ARCH/install.sh
      - cp ./linux/roles/wod.docker/templates/uninstall.sh .tmp/docker/$K8S_ARCH/uninstall.sh
      - tar czvf .tmp/$K8S_RELEASE/$K8S_ARCH/ansible-docker-$K8S_VERSION-$K8S_ARCH.tgz -C .tmp/docker/$K8S_ARCH .
      - rm -rf .tmp/docker

  - name: install-registry-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/registry:v2.8.1-amd64
    commands:
      - cp /usr/local/bin/registry linux/roles/wod.registry/files/bin/registry-v2.8.1

  - name: install-gateway-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/awecloud-gateway:v6.1.1-amd64
    commands:
      - cp /usr/local/bin/gateway linux/roles/wod.gateway/files/gateway-v6.1.1

  - name: group-vars-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_ARCH: amd64
    commands:
      - |
        sed -i --expression "s?K8S_ARCH:.*?K8S_ARCH: $K8S_ARCH?" ./linux/group_vars/all.yml

  - name: docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/ansible:2-amd64
      repo: wod/ansible-kubernetes
      version: v1.26.15
      channel: amd64
      args: "TARGETOS=linux,TARGETARCH=amd64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: install-docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_ARCH: arm64
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz > ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/install.sh > ./linux/roles/wod.docker/templates/install.sh
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/uninstall.sh > ./linux/roles/wod.docker/templates/uninstall.sh
      - |
        sed -i --expression "s?DOCKER_VERSION=.*?DOCKER_VERSION=\"\$\{DOCKER_VERSION\:-$DOCKER_VERSION\}\"?" ./linux/roles/wod.docker/templates/install.sh

  - name: ansible-docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_VERSION: v1.26.15
      K8S_RELEASE: v1.26
      K8S_ARCH: arm64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH .tmp/docker/$K8S_ARCH
      - cp ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz .tmp/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz
      - cp ./linux/roles/wod.docker/templates/install.sh .tmp/docker/$K8S_ARCH/install.sh
      - cp ./linux/roles/wod.docker/templates/uninstall.sh .tmp/docker/$K8S_ARCH/uninstall.sh
      - tar czvf .tmp/$K8S_RELEASE/$K8S_ARCH/ansible-docker-$K8S_VERSION-$K8S_ARCH.tgz -C .tmp/docker/$K8S_ARCH .
      - rm -rf .tmp/docker

  - name: install-registry-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/registry:v2.8.1-arm64
    commands:
      - cp /usr/local/bin/registry linux/roles/wod.registry/files/bin/registry-v2.8.1

  - name: install-gateway-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/awecloud-gateway:v6.1.1-arm64
    commands:
      - cp /usr/local/bin/gateway linux/roles/wod.gateway/files/gateway-v6.1.1

  - name: group-vars-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_ARCH: arm64
    commands:
      - |
        sed -i --expression "s?K8S_ARCH:.*?K8S_ARCH: $K8S_ARCH?" ./linux/group_vars/all.yml

  - name: docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/ansible:2-arm64
      repo: wod/ansible-kubernetes
      version: v1.26.15
      channel: arm64
      args: "TARGETOS=linux,TARGETARCH=arm64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.26.15-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.26.15
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.26.15-amd64
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.26-amd64
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.26.15-arm64
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.26-arm64
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.26-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.26
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: ansible-kubernetes-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    environment:
      REGISTRY_REMOTE: registry.cn-qingdao.aliyuncs.com/wod
      K8S_REPO: ansible-kubernetes
      K8S_VERSION: v1.26.15
      K8S_RELEASE: v1.26
      K8S_ARCH: amd64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH
      - cp install-offline.sh .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION.sh
      - docker pull $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH
      - docker save $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH | gzip > .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION-$K8S_ARCH.tgz

  - name: ansible-kubernetes-images-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.26.yml
      image: K8S_IMAGES
      arch: amd64
      group: k8s
      release: .tmp/v1.26/amd64/ansible-kubernetes-images-v1.26.15-amd64.tgz

  - name: ansible-kubernetes-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    environment:
      REGISTRY_REMOTE: registry.cn-qingdao.aliyuncs.com/wod
      K8S_REPO: ansible-kubernetes
      K8S_VERSION: v1.26.15
      K8S_RELEASE: v1.26
      K8S_ARCH: arm64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH
      - cp install-offline.sh .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION.sh
      - docker pull $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH
      - docker save $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH | gzip > .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION-$K8S_ARCH.tgz

  - name: ansible-kubernetes-images-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.26.yml
      image: K8S_IMAGES
      arch: arm64
      group: k8s
      release: .tmp/v1.26/arm64/ansible-kubernetes-images-v1.26.15-arm64.tgz

  - name: minio
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: ACCESS_KEY_MINIO
      S3_SECRET_KEY:
        from_secret: SECRET_KEY_MINIO
    commands:
      - mc alias set cache --api=S3v4 https://cache.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp --recursive .tmp/v1.26 cache/kubernetes/k8s/ansible

---
kind: pipeline
name: release-1.24

trigger:
  branch:
    - release-1.24

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.wodcloud.com
      access_key:
        from_secret: ACCESS_KEY_MINIO
      secret_key:
        from_secret: SECRET_KEY_MINIO

  - name: fetch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: version
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_VERSION: v1.24.17
      K8S_RELEASE: v1.24
    commands:
      - |
        sed -i --expression "s?K8S_VERSION:.*?K8S_VERSION: \"$K8S_VERSION\"?" linux/group_vars/all.yml
      - |
        sed -i --expression "s?K8S_VERSION=.*?K8S_VERSION=\"\$\{K8S_VERSION\:\-$K8S_VERSION\}\"?" install-offline.sh
      - |
        sed -i --expression "s?K8S_VERSION=.*?K8S_VERSION=\"\$\{K8S_VERSION\:\-$K8S_VERSION\}\"?" install.sh

  - name: curl
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      CILIUM_VERSION: 1.14.14
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/charts/beagle-cilium-$CILIUM_VERSION.tgz > ./linux/roles/wod.cilium/files/beagle-cilium-$CILIUM_VERSION.tgz

  - name: install-docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_ARCH: amd64
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz > ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/install.sh > ./linux/roles/wod.docker/templates/install.sh
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/uninstall.sh > ./linux/roles/wod.docker/templates/uninstall.sh
      - |
        sed -i --expression "s?DOCKER_VERSION=.*?DOCKER_VERSION=\"\$\{DOCKER_VERSION\:-$DOCKER_VERSION\}\"?" ./linux/roles/wod.docker/templates/install.sh

  - name: ansible-docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_VERSION: v1.24.17
      K8S_RELEASE: v1.24
      K8S_ARCH: amd64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH .tmp/docker/$K8S_ARCH
      - cp ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz .tmp/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz
      - cp ./linux/roles/wod.docker/templates/install.sh .tmp/docker/$K8S_ARCH/install.sh
      - cp ./linux/roles/wod.docker/templates/uninstall.sh .tmp/docker/$K8S_ARCH/uninstall.sh
      - tar czvf .tmp/$K8S_RELEASE/$K8S_ARCH/ansible-docker-$K8S_VERSION-$K8S_ARCH.tgz -C .tmp/docker/$K8S_ARCH .
      - rm -rf .tmp/docker

  - name: install-registry-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/registry:v2.8.1-amd64
    commands:
      - cp /usr/local/bin/registry linux/roles/wod.registry/files/bin/registry-v2.8.1

  - name: install-gateway-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/awecloud-gateway:v6.1.1-amd64
    commands:
      - cp /usr/local/bin/gateway linux/roles/wod.gateway/files/gateway-v6.1.1

  - name: group-vars-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_ARCH: amd64
    commands:
      - |
        sed -i --expression "s?K8S_ARCH:.*?K8S_ARCH: $K8S_ARCH?" ./linux/group_vars/all.yml

  - name: docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/ansible:2-amd64
      repo: wod/ansible-kubernetes
      version: v1.24.17
      channel: amd64
      args: "TARGETOS=linux,TARGETARCH=amd64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: install-docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_ARCH: arm64
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz > ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/install.sh > ./linux/roles/wod.docker/templates/install.sh
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/uninstall.sh > ./linux/roles/wod.docker/templates/uninstall.sh
      - |
        sed -i --expression "s?DOCKER_VERSION=.*?DOCKER_VERSION=\"\$\{DOCKER_VERSION\:-$DOCKER_VERSION\}\"?" ./linux/roles/wod.docker/templates/install.sh

  - name: ansible-docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_VERSION: v1.24.17
      K8S_RELEASE: v1.24
      K8S_ARCH: arm64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH .tmp/docker/$K8S_ARCH
      - cp ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz .tmp/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz
      - cp ./linux/roles/wod.docker/templates/install.sh .tmp/docker/$K8S_ARCH/install.sh
      - cp ./linux/roles/wod.docker/templates/uninstall.sh .tmp/docker/$K8S_ARCH/uninstall.sh
      - tar czvf .tmp/$K8S_RELEASE/$K8S_ARCH/ansible-docker-$K8S_VERSION-$K8S_ARCH.tgz -C .tmp/docker/$K8S_ARCH .
      - rm -rf .tmp/docker

  - name: install-registry-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/registry:v2.8.1-arm64
    commands:
      - cp /usr/local/bin/registry linux/roles/wod.registry/files/bin/registry-v2.8.1

  - name: install-gateway-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/awecloud-gateway:v6.1.1-arm64
    commands:
      - cp /usr/local/bin/gateway linux/roles/wod.gateway/files/gateway-v6.1.1

  - name: group-vars-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_ARCH: arm64
    commands:
      - |
        sed -i --expression "s?K8S_ARCH:.*?K8S_ARCH: $K8S_ARCH?" ./linux/group_vars/all.yml

  - name: docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/ansible:2-arm64
      repo: wod/ansible-kubernetes
      version: v1.24.17
      channel: arm64
      args: "TARGETOS=linux,TARGETARCH=arm64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.24.17-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.24.17
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.24.17-amd64
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.24-amd64
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.24.17-arm64
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.24-arm64
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.24-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.24
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: ansible-kubernetes-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    environment:
      REGISTRY_REMOTE: registry.cn-qingdao.aliyuncs.com/wod
      K8S_REPO: ansible-kubernetes
      K8S_VERSION: v1.24.17
      K8S_RELEASE: v1.24
      K8S_ARCH: amd64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH
      - cp install-offline.sh .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION.sh
      - docker pull $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH
      - docker save $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH | gzip > .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION-$K8S_ARCH.tgz

  - name: ansible-kubernetes-images-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.24.yml
      image: K8S_IMAGES
      arch: amd64
      group: k8s
      release: .tmp/v1.24/amd64/ansible-kubernetes-images-v1.24.17-amd64.tgz

  - name: ansible-kubernetes-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    environment:
      REGISTRY_REMOTE: registry.cn-qingdao.aliyuncs.com/wod
      K8S_REPO: ansible-kubernetes
      K8S_VERSION: v1.24.17
      K8S_RELEASE: v1.24
      K8S_ARCH: arm64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH
      - cp install-offline.sh .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION.sh
      - docker pull $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH
      - docker save $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH | gzip > .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION-$K8S_ARCH.tgz

  - name: ansible-kubernetes-images-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.24.yml
      image: K8S_IMAGES
      arch: arm64
      group: k8s
      release: .tmp/v1.24/arm64/ansible-kubernetes-images-v1.24.17-arm64.tgz

  - name: minio
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: ACCESS_KEY_MINIO
      S3_SECRET_KEY:
        from_secret: SECRET_KEY_MINIO
    commands:
      - mc alias set cache --api=S3v4 https://cache.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp --recursive .tmp/v1.24 cache/kubernetes/k8s/ansible

---
kind: pipeline
name: release-1.22

trigger:
  branch:
    - release-1.22

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.wodcloud.com
      access_key:
        from_secret: ACCESS_KEY_MINIO
      secret_key:
        from_secret: SECRET_KEY_MINIO

  - name: fetch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: version
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_VERSION: v1.22.17
      K8S_RELEASE: v1.22
    commands:
      - |
        sed -i --expression "s?K8S_VERSION:.*?K8S_VERSION: \"$K8S_VERSION\"?" linux/group_vars/all.yml
      - |
        sed -i --expression "s?K8S_VERSION=.*?K8S_VERSION=\"\$\{K8S_VERSION\:\-$K8S_VERSION\}\"?" install-offline.sh
      - |
        sed -i --expression "s?K8S_VERSION=.*?K8S_VERSION=\"\$\{K8S_VERSION\:\-$K8S_VERSION\}\"?" install.sh

  - name: curl
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      CILIUM_VERSION: 1.14.14
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/charts/beagle-cilium-$CILIUM_VERSION.tgz > ./linux/roles/wod.cilium/files/beagle-cilium-$CILIUM_VERSION.tgz

  - name: install-docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_ARCH: amd64
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz > ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/install.sh > ./linux/roles/wod.docker/templates/install.sh
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/uninstall.sh > ./linux/roles/wod.docker/templates/uninstall.sh
      - |
        sed -i --expression "s?DOCKER_VERSION=.*?DOCKER_VERSION=\"\$\{DOCKER_VERSION\:-$DOCKER_VERSION\}\"?" ./linux/roles/wod.docker/templates/install.sh

  - name: ansible-docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_VERSION: v1.22.17
      K8S_RELEASE: v1.22
      K8S_ARCH: amd64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH .tmp/docker/$K8S_ARCH
      - cp ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz .tmp/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz
      - cp ./linux/roles/wod.docker/templates/install.sh .tmp/docker/$K8S_ARCH/install.sh
      - cp ./linux/roles/wod.docker/templates/uninstall.sh .tmp/docker/$K8S_ARCH/uninstall.sh
      - tar czvf .tmp/$K8S_RELEASE/$K8S_ARCH/ansible-docker-$K8S_VERSION-$K8S_ARCH.tgz -C .tmp/docker/$K8S_ARCH .
      - rm -rf .tmp/docker

  - name: install-registry-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/registry:v2.8.1-amd64
    commands:
      - cp /usr/local/bin/registry linux/roles/wod.registry/files/bin/registry-v2.8.1

  - name: install-gateway-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/awecloud-gateway:v6.1.1-amd64
    commands:
      - cp /usr/local/bin/gateway linux/roles/wod.gateway/files/gateway-v6.1.1

  - name: group-vars-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_ARCH: amd64
    commands:
      - |
        sed -i --expression "s?K8S_ARCH:.*?K8S_ARCH: $K8S_ARCH?" ./linux/group_vars/all.yml

  - name: docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/ansible:2-amd64
      repo: wod/ansible-kubernetes
      version: v1.22.17
      channel: amd64
      args: "TARGETOS=linux,TARGETARCH=amd64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: install-docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_ARCH: arm64
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz > ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/install.sh > ./linux/roles/wod.docker/templates/install.sh
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/uninstall.sh > ./linux/roles/wod.docker/templates/uninstall.sh
      - |
        sed -i --expression "s?DOCKER_VERSION=.*?DOCKER_VERSION=\"\$\{DOCKER_VERSION\:-$DOCKER_VERSION\}\"?" ./linux/roles/wod.docker/templates/install.sh

  - name: ansible-docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_VERSION: v1.22.17
      K8S_RELEASE: v1.22
      K8S_ARCH: arm64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH .tmp/docker/$K8S_ARCH
      - cp ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz .tmp/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz
      - cp ./linux/roles/wod.docker/templates/install.sh .tmp/docker/$K8S_ARCH/install.sh
      - cp ./linux/roles/wod.docker/templates/uninstall.sh .tmp/docker/$K8S_ARCH/uninstall.sh
      - tar czvf .tmp/$K8S_RELEASE/$K8S_ARCH/ansible-docker-$K8S_VERSION-$K8S_ARCH.tgz -C .tmp/docker/$K8S_ARCH .
      - rm -rf .tmp/docker

  - name: install-registry-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/registry:v2.8.1-arm64
    commands:
      - cp /usr/local/bin/registry linux/roles/wod.registry/files/bin/registry-v2.8.1

  - name: install-gateway-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/awecloud-gateway:v6.1.1-arm64
    commands:
      - cp /usr/local/bin/gateway linux/roles/wod.gateway/files/gateway-v6.1.1

  - name: group-vars-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_ARCH: arm64
    commands:
      - |
        sed -i --expression "s?K8S_ARCH:.*?K8S_ARCH: $K8S_ARCH?" ./linux/group_vars/all.yml

  - name: docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/ansible:2-arm64
      repo: wod/ansible-kubernetes
      version: v1.22.17
      channel: arm64
      args: "TARGETOS=linux,TARGETARCH=arm64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.22.17-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.22.17
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.22.17-amd64
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.22-amd64
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.22.17-arm64
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.22-arm64
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.22-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.22
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: ansible-kubernetes-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    environment:
      REGISTRY_REMOTE: registry.cn-qingdao.aliyuncs.com/wod
      K8S_REPO: ansible-kubernetes
      K8S_VERSION: v1.22.17
      K8S_RELEASE: v1.22
      K8S_ARCH: amd64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH
      - cp install-offline.sh .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION.sh
      - docker pull $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH
      - docker save $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH | gzip > .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION-$K8S_ARCH.tgz

  - name: ansible-kubernetes-images-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.22.yml
      image: K8S_IMAGES
      arch: amd64
      group: k8s
      release: .tmp/v1.22/amd64/ansible-kubernetes-images-v1.22.17-amd64.tgz

  - name: ansible-kubernetes-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    environment:
      REGISTRY_REMOTE: registry.cn-qingdao.aliyuncs.com/wod
      K8S_REPO: ansible-kubernetes
      K8S_VERSION: v1.22.17
      K8S_RELEASE: v1.22
      K8S_ARCH: arm64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH
      - cp install-offline.sh .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION.sh
      - docker pull $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH
      - docker save $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH | gzip > .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION-$K8S_ARCH.tgz

  - name: ansible-kubernetes-images-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.22.yml
      image: K8S_IMAGES
      arch: arm64
      group: k8s
      release: .tmp/v1.22/arm64/ansible-kubernetes-images-v1.22.17-arm64.tgz

  - name: minio
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: ACCESS_KEY_MINIO
      S3_SECRET_KEY:
        from_secret: SECRET_KEY_MINIO
    commands:
      - mc alias set cache --api=S3v4 https://cache.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp --recursive .tmp/v1.22 cache/kubernetes/k8s/ansible

---
kind: pipeline
name: release-1.20

trigger:
  branch:
    - release-1.20

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.wodcloud.com
      access_key:
        from_secret: ACCESS_KEY_MINIO
      secret_key:
        from_secret: SECRET_KEY_MINIO

  - name: fetch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: version
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_VERSION: v1.20.15
      K8S_RELEASE: v1.20
    commands:
      - |
        sed -i --expression "s?K8S_VERSION:.*?K8S_VERSION: \"$K8S_VERSION\"?" linux/group_vars/all.yml
      - |
        sed -i --expression "s?K8S_VERSION=.*?K8S_VERSION=\"\$\{K8S_VERSION\:\-$K8S_VERSION\}\"?" install-offline.sh
      - |
        sed -i --expression "s?K8S_VERSION=.*?K8S_VERSION=\"\$\{K8S_VERSION\:\-$K8S_VERSION\}\"?" install.sh

  - name: curl
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      CILIUM_VERSION: 1.14.14
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/charts/beagle-cilium-$CILIUM_VERSION.tgz > ./linux/roles/wod.cilium/files/beagle-cilium-$CILIUM_VERSION.tgz

  - name: install-docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_ARCH: amd64
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz > ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/install.sh > ./linux/roles/wod.docker/templates/install.sh
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/uninstall.sh > ./linux/roles/wod.docker/templates/uninstall.sh
      - |
        sed -i --expression "s?DOCKER_VERSION=.*?DOCKER_VERSION=\"\$\{DOCKER_VERSION\:-$DOCKER_VERSION\}\"?" ./linux/roles/wod.docker/templates/install.sh

  - name: ansible-docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_VERSION: v1.20.15
      K8S_RELEASE: v1.20
      K8S_ARCH: amd64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH .tmp/docker/$K8S_ARCH
      - cp ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz .tmp/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz
      - cp ./linux/roles/wod.docker/templates/install.sh .tmp/docker/$K8S_ARCH/install.sh
      - cp ./linux/roles/wod.docker/templates/uninstall.sh .tmp/docker/$K8S_ARCH/uninstall.sh
      - tar czvf .tmp/$K8S_RELEASE/$K8S_ARCH/ansible-docker-$K8S_VERSION-$K8S_ARCH.tgz -C .tmp/docker/$K8S_ARCH .
      - rm -rf .tmp/docker

  - name: install-registry-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/registry:v2.8.1-amd64
    commands:
      - cp /usr/local/bin/registry linux/roles/wod.registry/files/bin/registry-v2.8.1

  - name: install-gateway-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/awecloud-gateway:v6.1.1-amd64
    commands:
      - cp /usr/local/bin/gateway linux/roles/wod.gateway/files/gateway-v6.1.1

  - name: group-vars-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_ARCH: amd64
    commands:
      - |
        sed -i --expression "s?K8S_ARCH:.*?K8S_ARCH: $K8S_ARCH?" ./linux/group_vars/all.yml

  - name: docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/ansible:2-amd64
      repo: wod/ansible-kubernetes
      version: v1.20.15
      channel: amd64
      args: "TARGETOS=linux,TARGETARCH=amd64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: install-docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_ARCH: arm64
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz > ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/install.sh > ./linux/roles/wod.docker/templates/install.sh
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/uninstall.sh > ./linux/roles/wod.docker/templates/uninstall.sh
      - |
        sed -i --expression "s?DOCKER_VERSION=.*?DOCKER_VERSION=\"\$\{DOCKER_VERSION\:-$DOCKER_VERSION\}\"?" ./linux/roles/wod.docker/templates/install.sh

  - name: ansible-docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_VERSION: v1.20.15
      K8S_RELEASE: v1.20
      K8S_ARCH: arm64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH .tmp/docker/$K8S_ARCH
      - cp ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz .tmp/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz
      - cp ./linux/roles/wod.docker/templates/install.sh .tmp/docker/$K8S_ARCH/install.sh
      - cp ./linux/roles/wod.docker/templates/uninstall.sh .tmp/docker/$K8S_ARCH/uninstall.sh
      - tar czvf .tmp/$K8S_RELEASE/$K8S_ARCH/ansible-docker-$K8S_VERSION-$K8S_ARCH.tgz -C .tmp/docker/$K8S_ARCH .
      - rm -rf .tmp/docker

  - name: install-registry-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/registry:v2.8.1-arm64
    commands:
      - cp /usr/local/bin/registry linux/roles/wod.registry/files/bin/registry-v2.8.1

  - name: install-gateway-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/awecloud-gateway:v6.1.1-arm64
    commands:
      - cp /usr/local/bin/gateway linux/roles/wod.gateway/files/gateway-v6.1.1

  - name: group-vars-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_ARCH: arm64
    commands:
      - |
        sed -i --expression "s?K8S_ARCH:.*?K8S_ARCH: $K8S_ARCH?" ./linux/group_vars/all.yml

  - name: docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/ansible:2-arm64
      repo: wod/ansible-kubernetes
      version: v1.20.15
      channel: arm64
      args: "TARGETOS=linux,TARGETARCH=arm64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.20.15-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.20.15
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.20.15-amd64
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.20-amd64
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.20.15-arm64
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.20-arm64
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64,linux/mips64le
      template: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.20-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.20
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: ansible-kubernetes-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    environment:
      REGISTRY_REMOTE: registry.cn-qingdao.aliyuncs.com/wod
      K8S_REPO: ansible-kubernetes
      K8S_VERSION: v1.20.15
      K8S_RELEASE: v1.20
      K8S_ARCH: amd64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH
      - cp install-offline.sh .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION.sh
      - docker pull $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH
      - docker save $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH | gzip > .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION-$K8S_ARCH.tgz

  - name: ansible-kubernetes-images-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.20.yml
      image: K8S_IMAGES
      arch: amd64
      group: k8s
      release: .tmp/v1.20/amd64/ansible-kubernetes-images-v1.20.15-amd64.tgz

  - name: ansible-kubernetes-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    environment:
      REGISTRY_REMOTE: registry.cn-qingdao.aliyuncs.com/wod
      K8S_REPO: ansible-kubernetes
      K8S_VERSION: v1.20.15
      K8S_RELEASE: v1.20
      K8S_ARCH: arm64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH
      - cp install-offline.sh .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION.sh
      - docker pull $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH
      - docker save $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH | gzip > .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION-$K8S_ARCH.tgz

  - name: ansible-kubernetes-images-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.20.yml
      image: K8S_IMAGES
      arch: arm64
      group: k8s
      release: .tmp/v1.20/arm64/ansible-kubernetes-images-v1.20.15-arm64.tgz

  - name: minio
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: ACCESS_KEY_MINIO
      S3_SECRET_KEY:
        from_secret: SECRET_KEY_MINIO
    commands:
      - mc alias set cache --api=S3v4 https://cache.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp --recursive .tmp/v1.20 cache/kubernetes/k8s/ansible

---
kind: pipeline
name: release-1.18

trigger:
  branch:
    - release-1.18

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.wodcloud.com
      access_key:
        from_secret: ACCESS_KEY_MINIO
      secret_key:
        from_secret: SECRET_KEY_MINIO

  - name: fetch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: version
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_VERSION: v1.18.20
      K8S_RELEASE: v1.18
    commands:
      - |
        sed -i --expression "s?K8S_VERSION:.*?K8S_VERSION: \"$K8S_VERSION\"?" linux/group_vars/all.yml
      - |
        sed -i --expression "s?K8S_VERSION=.*?K8S_VERSION=\"\$\{K8S_VERSION\:\-$K8S_VERSION\}\"?" install-offline.sh
      - |
        sed -i --expression "s?K8S_VERSION=.*?K8S_VERSION=\"\$\{K8S_VERSION\:\-$K8S_VERSION\}\"?" install.sh

  - name: curl
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      CILIUM_VERSION: 1.14.14
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/charts/beagle-cilium-$CILIUM_VERSION.tgz > ./linux/roles/wod.cilium/files/beagle-cilium-$CILIUM_VERSION.tgz

  - name: install-docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_ARCH: amd64
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz > ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/install.sh > ./linux/roles/wod.docker/templates/install.sh
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/uninstall.sh > ./linux/roles/wod.docker/templates/uninstall.sh
      - |
        sed -i --expression "s?DOCKER_VERSION=.*?DOCKER_VERSION=\"\$\{DOCKER_VERSION\:-$DOCKER_VERSION\}\"?" ./linux/roles/wod.docker/templates/install.sh

  - name: ansible-docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_VERSION: v1.18.20
      K8S_RELEASE: v1.18
      K8S_ARCH: amd64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH .tmp/docker/$K8S_ARCH
      - cp ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz .tmp/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz
      - cp ./linux/roles/wod.docker/templates/install.sh .tmp/docker/$K8S_ARCH/install.sh
      - cp ./linux/roles/wod.docker/templates/uninstall.sh .tmp/docker/$K8S_ARCH/uninstall.sh
      - tar czvf .tmp/$K8S_RELEASE/$K8S_ARCH/ansible-docker-$K8S_VERSION-$K8S_ARCH.tgz -C .tmp/docker/$K8S_ARCH .
      - rm -rf .tmp/docker

  - name: install-registry-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/registry:v2.8.1-amd64
    commands:
      - cp /usr/local/bin/registry linux/roles/wod.registry/files/bin/registry-v2.8.1

  - name: install-gateway-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/awecloud-gateway:v6.1.1-amd64
    commands:
      - cp /usr/local/bin/gateway linux/roles/wod.gateway/files/gateway-v6.1.1

  - name: group-vars-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_ARCH: amd64
    commands:
      - |
        sed -i --expression "s?K8S_ARCH:.*?K8S_ARCH: $K8S_ARCH?" ./linux/group_vars/all.yml

  - name: docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/ansible:2-amd64
      repo: wod/ansible-kubernetes
      version: v1.18.20
      channel: amd64
      args: "TARGETOS=linux,TARGETARCH=amd64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: install-docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_ARCH: arm64
    commands:
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz > ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/install.sh > ./linux/roles/wod.docker/templates/install.sh
      - curl https://cache.wodcloud.com/kubernetes/k8s/docker/uninstall.sh > ./linux/roles/wod.docker/templates/uninstall.sh
      - |
        sed -i --expression "s?DOCKER_VERSION=.*?DOCKER_VERSION=\"\$\{DOCKER_VERSION\:-$DOCKER_VERSION\}\"?" ./linux/roles/wod.docker/templates/install.sh

  - name: ansible-docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    environment:
      DOCKER_VERSION: 26.1.5
      K8S_VERSION: v1.18.20
      K8S_RELEASE: v1.18
      K8S_ARCH: arm64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH .tmp/docker/$K8S_ARCH
      - cp ./linux/roles/wod.docker/files/docker-$DOCKER_VERSION.tgz .tmp/docker/$K8S_ARCH/docker-$DOCKER_VERSION.tgz
      - cp ./linux/roles/wod.docker/templates/install.sh .tmp/docker/$K8S_ARCH/install.sh
      - cp ./linux/roles/wod.docker/templates/uninstall.sh .tmp/docker/$K8S_ARCH/uninstall.sh
      - tar czvf .tmp/$K8S_RELEASE/$K8S_ARCH/ansible-docker-$K8S_VERSION-$K8S_ARCH.tgz -C .tmp/docker/$K8S_ARCH .
      - rm -rf .tmp/docker

  - name: install-registry-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/registry:v2.8.1-arm64
    commands:
      - cp /usr/local/bin/registry linux/roles/wod.registry/files/bin/registry-v2.8.1

  - name: install-gateway-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/awecloud-gateway:v6.1.1-arm64
    commands:
      - cp /usr/local/bin/gateway linux/roles/wod.gateway/files/gateway-v6.1.1

  - name: group-vars-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_ARCH: arm64
    commands:
      - |
        sed -i --expression "s?K8S_ARCH:.*?K8S_ARCH: $K8S_ARCH?" ./linux/group_vars/all.yml

  - name: docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/ansible:2-arm64
      repo: wod/ansible-kubernetes
      version: v1.18.20
      channel: arm64
      args: "TARGETOS=linux,TARGETARCH=arm64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.18.20-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.18.20
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.18.20-amd64
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.18-amd64
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.18.20-arm64
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.18-arm64
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.18-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.18
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: ansible-kubernetes-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    environment:
      REGISTRY_REMOTE: registry.cn-qingdao.aliyuncs.com/wod
      K8S_REPO: ansible-kubernetes
      K8S_VERSION: v1.18.20
      K8S_RELEASE: v1.18
      K8S_ARCH: amd64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH
      - cp install-offline.sh .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION.sh
      - docker pull $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH
      - docker save $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH | gzip > .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION-$K8S_ARCH.tgz

  - name: ansible-kubernetes-images-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.18.yml
      image: K8S_IMAGES
      arch: amd64
      group: k8s
      release: .tmp/v1.18/amd64/ansible-kubernetes-images-v1.18.20-amd64.tgz

  - name: ansible-kubernetes-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    environment:
      REGISTRY_REMOTE: registry.cn-qingdao.aliyuncs.com/wod
      K8S_REPO: ansible-kubernetes
      K8S_VERSION: v1.18.20
      K8S_RELEASE: v1.18
      K8S_ARCH: arm64
    commands:
      - mkdir -p .tmp/$K8S_RELEASE/$K8S_ARCH
      - cp install-offline.sh .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION.sh
      - docker pull $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH
      - docker save $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH | gzip > .tmp/$K8S_RELEASE/$K8S_ARCH/$K8S_REPO-$K8S_VERSION-$K8S_ARCH.tgz

  - name: ansible-kubernetes-images-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.18.yml
      image: K8S_IMAGES
      arch: arm64
      group: k8s
      release: .tmp/v1.18/arm64/ansible-kubernetes-images-v1.18.20-arm64.tgz

  - name: minio
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: ACCESS_KEY_MINIO
      S3_SECRET_KEY:
        from_secret: SECRET_KEY_MINIO
    commands:
      - mc alias set cache --api=S3v4 https://cache.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp --recursive .tmp/v1.18 cache/kubernetes/k8s/ansible

---
kind: secret
name: SOCKS5_PROXY
get:
  name: SOCKS5_PROXY
  path: devops-secrets

---
kind: secret
name: REGISTRY_USER_ALIYUN
get:
  name: REGISTRY_USER_ALIYUN
  path: devops-secrets

---
kind: secret
name: REGISTRY_PASSWORD_ALIYUN
get:
  name: REGISTRY_PASSWORD_ALIYUN
  path: devops-secrets

---
kind: secret
name: ACCESS_KEY_MINIO
get:
  name: ACCESS_KEY_MINIO
  path: devops-secrets

---
kind: secret
name: SECRET_KEY_MINIO
get:
  name: SECRET_KEY_MINIO
  path: devops-secrets

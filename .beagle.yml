kind: pipeline
name: dev

trigger:
  branch:
    - dev

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.ali.wodcloud.com
      access_key:
        from_secret: S3_ACCESS_KEY_ALIYUN
      secret_key:
        from_secret: S3_SECRET_KEY_ALIYUN

  - name: fetch
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: curl
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      CILIUM_VERSION: 1.14.14
    commands:
      - curl https://cache.ali.wodcloud.com/kubernetes/charts/beagle-cilium-$CILIUM_VERSION.tgz > ./linux/roles/wod.cilium/files/beagle-cilium-$CILIUM_VERSION.tgz

  - name: install-docker-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      DOCKER_VERSION: 27.3.1
      K8S_ARCH: amd64
    commands:
      - curl https://cache.ali.wodcloud.com/kubernetes/ansible/ansible-docker-$DOCKER_VERSION-$K8S_ARCH.tgz > ./linux/roles/wod.docker/files/ansible-docker-$DOCKER_VERSION-$K8S_ARCH.tgz
      - curl https://cache.ali.wodcloud.com/kubernetes/ansible/ansible-docker.sh >./linux/roles/wod.docker/files/ansible-docker.sh
      - curl https://cache.ali.wodcloud.com/kubernetes/ansible/ansible-docker-uninstall.sh >./linux/roles/wod.docker/files/ansible-docker-uninstall.sh
      - |
        sed -i --expression "s?DOCKER_VERSION=.*?DOCKER_VERSION=\"\$\{DOCKER_VERSION\:-$DOCKER_VERSION\}\"?" ./linux/roles/wod.docker/files/ansible-docker.sh

  - name: install-registry-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/registry:v2.8.1-amd64
    commands:
      - cp /usr/local/bin/registry linux/roles/wod.registry/files/bin/registry-v2.8.1

  - name: install-gateway-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/awecloud-gateway:v6.1.1-amd64
    commands:
      - cp /usr/local/bin/gateway linux/roles/wod.gateway/files/gateway-v6.1.1

  - name: group-vars-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_ARCH: amd64
    commands:
      - |
        sed -i --expression "s?K8S_ARCH:.*?K8S_ARCH: $K8S_ARCH?" ./linux/group_vars/all.yml

  - name: docker-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry-vpc.cn-qingdao.aliyuncs.com/wod/ansible:2-amd64
      repo: wod/ansible-kubernetes
      version: v1.30.6
      channel: amd64
      args: "TARGETOS=linux,TARGETARCH=amd64"
      registry: registry-vpc.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: install-docker-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      DOCKER_VERSION: 27.3.1
      K8S_ARCH: arm64
    commands:
      - curl https://cache.ali.wodcloud.com/kubernetes/ansible/ansible-docker-$DOCKER_VERSION-$K8S_ARCH.tgz > ./linux/roles/wod.docker/files/ansible-docker-$DOCKER_VERSION-$K8S_ARCH.tgz
      - curl https://cache.ali.wodcloud.com/kubernetes/ansible/ansible-docker.sh >./linux/roles/wod.docker/files/ansible-docker.sh
      - curl https://cache.ali.wodcloud.com/kubernetes/ansible/ansible-docker-uninstall.sh >./linux/roles/wod.docker/files/ansible-docker-uninstall.sh
      - |
        sed -i --expression "s?DOCKER_VERSION=.*?DOCKER_VERSION=\"\$\{DOCKER_VERSION\:-$DOCKER_VERSION\}\"?" ./linux/roles/wod.docker/files/ansible-docker.sh

  - name: install-registry-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/registry:v2.8.1-arm64
    commands:
      - rm -rf ./linux/roles/wod.registry/files/bin/registry-*
      - cp /usr/local/bin/registry ./linux/roles/wod.registry/files/bin/registry-v2.8.1

  - name: install-gateway-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/awecloud-gateway:v6.1.1-arm64
    commands:
      - cp /usr/local/bin/gateway linux/roles/wod.gateway/files/gateway-v6.1.1

  - name: group-vars-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      K8S_ARCH: arm64
    commands:
      - |
        sed -i --expression "s?K8S_ARCH:.*?K8S_ARCH: $K8S_ARCH?" ./linux/group_vars/all.yml

  - name: docker-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry-vpc.cn-qingdao.aliyuncs.com/wod/ansible:2-arm64
      repo: wod/ansible-kubernetes
      version: v1.30.6
      channel: arm64
      args: "TARGETOS=linux,TARGETARCH=arm64"
      registry: registry-vpc.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arch
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry-vpc.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.30.6-ARCH
      target: registry-vpc.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.30.6
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: ansible-kubernetes-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    environment:
      REGISTRY_REMOTE: registry.cn-qingdao.aliyuncs.com/wod
      K8S_REPO: ansible-kubernetes
      K8S_VERSION: v1.30.6
      K8S_ARCH: amd64
    commands:
      - mkdir -p .tmp
      - docker pull $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH
      - docker save $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH | gzip > .tmp/$K8S_REPO-$K8S_VERSION-$K8S_ARCH.tgz

  - name: ansible-kubernetes-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    environment:
      REGISTRY_REMOTE: registry.cn-qingdao.aliyuncs.com/wod
      K8S_REPO: ansible-kubernetes
      K8S_VERSION: v1.30.6
      K8S_ARCH: arm64
    commands:
      - mkdir -p .tmp
      - docker pull $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH
      - docker save $REGISTRY_REMOTE/$K8S_REPO:$K8S_VERSION-$K8S_ARCH | gzip > .tmp/$K8S_REPO-$K8S_VERSION-$K8S_ARCH.tgz

  - name: minio
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: S3_ACCESS_KEY_ALIYUN
      S3_SECRET_KEY:
        from_secret: S3_SECRET_KEY_ALIYUN
    commands:
      - cp install-offline.sh .tmp/ansible-kubernetes-v1.30.6.sh
      - mc alias set aliyun --api=S3v4 https://cache.ali.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp --recursive .tmp/ aliyun/kubernetes/ansible

---
kind: pipeline
name: main

trigger:
  branch:
    - main

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.ali.wodcloud.com
      access_key:
        from_secret: S3_ACCESS_KEY_ALIYUN
      secret_key:
        from_secret: S3_SECRET_KEY_ALIYUN

  - name: fetch
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: harbor-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.30.6-amd64
      target: registry-vpc.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:latest-amd64
      registry: registry-vpc.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:v1.30.6-arm64
      target: registry-vpc.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:latest-arm64
      registry: registry-vpc.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arch
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry-vpc.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:latest-ARCH
      target: registry-vpc.cn-qingdao.aliyuncs.com/wod/ansible-kubernetes:latest
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: minio
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: S3_ACCESS_KEY_ALIYUN
      S3_SECRET_KEY:
        from_secret: S3_SECRET_KEY_ALIYUN
    commands:
      - mc alias set aliyun --api=S3v4 https://cache.ali.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp install.sh aliyun/kubernetes/ansible/ansible-kubernetes.sh
      - mc cp install-offline.sh aliyun/kubernetes/ansible/ansible-kubernetes-latest.sh
      - mc cp aliyun/kubernetes/ansible/ansible-kubernetes-v1.30.6-amd64.tgz aliyun/kubernetes/ansible/ansible-kubernetes-latest-amd64.tgz
      - mc cp aliyun/kubernetes/ansible/ansible-kubernetes-v1.30.6-arm64.tgz aliyun/kubernetes/ansible/ansible-kubernetes-latest-arm64.tgz

---
kind: pipeline
name: release-1.30

trigger:
  branch:
    - release-1.30

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.ali.wodcloud.com
      access_key:
        from_secret: S3_ACCESS_KEY_ALIYUN
      secret_key:
        from_secret: S3_SECRET_KEY_ALIYUN

  - name: fetch
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: ansible-kubernetes-images-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.30.yml
      image: K8S_IMAGES
      arch: amd64
      group: k8s
      release: .tmp/ansible-kubernetes-images-v1.30.6-amd64.tgz

  - name: ansible-kubernetes-images-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.30.yml
      image: K8S_IMAGES
      arch: arm64
      group: k8s
      release: .tmp/ansible-kubernetes-images-v1.30.6-arm64.tgz

  - name: minio
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: S3_ACCESS_KEY_ALIYUN
      S3_SECRET_KEY:
        from_secret: S3_SECRET_KEY_ALIYUN
    commands:
      - mc alias set aliyun --api=S3v4 https://cache.ali.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp --recursive .tmp/ aliyun/kubernetes/ansible

---
kind: pipeline
name: release-1.28

trigger:
  branch:
    - release-1.28

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.ali.wodcloud.com
      access_key:
        from_secret: S3_ACCESS_KEY_ALIYUN
      secret_key:
        from_secret: S3_SECRET_KEY_ALIYUN

  - name: fetch
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: ansible-kubernetes-images-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.28.yml
      image: K8S_IMAGES
      arch: amd64
      group: k8s
      release: .tmp/ansible-kubernetes-images-v1.28.13-amd64.tgz

  - name: ansible-kubernetes-images-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.28.yml
      image: K8S_IMAGES
      arch: arm64
      group: k8s
      release: .tmp/ansible-kubernetes-images-v1.28.13-arm64.tgz

  - name: minio
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: S3_ACCESS_KEY_ALIYUN
      S3_SECRET_KEY:
        from_secret: S3_SECRET_KEY_ALIYUN
    commands:
      - mc alias set aliyun --api=S3v4 https://cache.ali.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp --recursive .tmp/ aliyun/kubernetes/ansible

---
kind: pipeline
name: release-1.26

trigger:
  branch:
    - release-1.26

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.ali.wodcloud.com
      access_key:
        from_secret: S3_ACCESS_KEY_ALIYUN
      secret_key:
        from_secret: S3_SECRET_KEY_ALIYUN

  - name: fetch
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: ansible-kubernetes-images-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.26.yml
      image: K8S_IMAGES
      arch: amd64
      group: k8s
      release: .tmp/ansible-kubernetes-images-v1.26.15-amd64.tgz

  - name: ansible-kubernetes-images-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.26.yml
      image: K8S_IMAGES
      arch: arm64
      group: k8s
      release: .tmp/ansible-kubernetes-images-v1.26.15-arm64.tgz

  - name: minio
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: S3_ACCESS_KEY_ALIYUN
      S3_SECRET_KEY:
        from_secret: S3_SECRET_KEY_ALIYUN
    commands:
      - mc alias set aliyun --api=S3v4 https://cache.ali.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp --recursive .tmp/ aliyun/kubernetes/ansible

---
kind: pipeline
name: release-1.24

trigger:
  branch:
    - release-1.24

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.ali.wodcloud.com
      access_key:
        from_secret: S3_ACCESS_KEY_ALIYUN
      secret_key:
        from_secret: S3_SECRET_KEY_ALIYUN

  - name: fetch
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: ansible-kubernetes-images-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.24.yml
      image: K8S_IMAGES
      arch: amd64
      group: k8s
      release: .tmp/ansible-kubernetes-images-v1.24.17-amd64.tgz

  - name: ansible-kubernetes-images-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.24.yml
      image: K8S_IMAGES
      arch: arm64
      group: k8s
      release: .tmp/ansible-kubernetes-images-v1.24.17-arm64.tgz

  - name: minio
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: S3_ACCESS_KEY_ALIYUN
      S3_SECRET_KEY:
        from_secret: S3_SECRET_KEY_ALIYUN
    commands:
      - mc alias set aliyun --api=S3v4 https://cache.ali.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp --recursive .tmp/ aliyun/kubernetes/ansible

---
kind: pipeline
name: release-1.22

trigger:
  branch:
    - release-1.22

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.ali.wodcloud.com
      access_key:
        from_secret: S3_ACCESS_KEY_ALIYUN
      secret_key:
        from_secret: S3_SECRET_KEY_ALIYUN

  - name: fetch
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: ansible-kubernetes-images-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.22.yml
      image: K8S_IMAGES
      arch: amd64
      group: k8s
      release: .tmp/ansible-kubernetes-images-v1.22.17-amd64.tgz

  - name: ansible-kubernetes-images-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.22.yml
      image: K8S_IMAGES
      arch: arm64
      group: k8s
      release: .tmp/ansible-kubernetes-images-v1.22.17-arm64.tgz

  - name: minio
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: S3_ACCESS_KEY_ALIYUN
      S3_SECRET_KEY:
        from_secret: S3_SECRET_KEY_ALIYUN
    commands:
      - mc alias set aliyun --api=S3v4 https://cache.ali.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp --recursive .tmp/ aliyun/kubernetes/ansible

---
kind: pipeline
name: release-1.20

trigger:
  branch:
    - release-1.20

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.ali.wodcloud.com
      access_key:
        from_secret: S3_ACCESS_KEY_ALIYUN
      secret_key:
        from_secret: S3_SECRET_KEY_ALIYUN

  - name: fetch
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: ansible-kubernetes-images-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.20.yml
      image: K8S_IMAGES
      arch: amd64
      group: k8s
      release: .tmp/ansible-kubernetes-images-v1.20.15-amd64.tgz

  - name: ansible-kubernetes-images-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.20.yml
      image: K8S_IMAGES
      arch: arm64
      group: k8s
      release: .tmp/ansible-kubernetes-images-v1.20.15-arm64.tgz

  - name: minio
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: S3_ACCESS_KEY_ALIYUN
      S3_SECRET_KEY:
        from_secret: S3_SECRET_KEY_ALIYUN
    commands:
      - mc alias set aliyun --api=S3v4 https://cache.ali.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp --recursive .tmp/ aliyun/kubernetes/ansible

---
kind: pipeline
name: release-1.18

trigger:
  branch:
    - release-1.18

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.ali.wodcloud.com
      access_key:
        from_secret: S3_ACCESS_KEY_ALIYUN
      secret_key:
        from_secret: S3_SECRET_KEY_ALIYUN

  - name: fetch
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: ansible-kubernetes-images-amd64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.18.yml
      image: K8S_IMAGES
      arch: amd64
      group: k8s
      release: .tmp/ansible-kubernetes-images-v1.18.20-amd64.tgz

  - name: ansible-kubernetes-images-arm64
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-docker-images:1.0
    settings:
      source: registry-vpc.cn-qingdao.aliyuncs.com/wod
      yaml: linux/vars/1.18.yml
      image: K8S_IMAGES
      arch: arm64
      group: k8s
      release: .tmp/ansible-kubernetes-images-v1.18.20-arm64.tgz

  - name: minio
    image: registry-vpc.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: S3_ACCESS_KEY_ALIYUN
      S3_SECRET_KEY:
        from_secret: S3_SECRET_KEY_ALIYUN
    commands:
      - mc alias set aliyun --api=S3v4 https://cache.ali.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp --recursive .tmp/ aliyun/kubernetes/ansible

---
kind: secret
name: SOCKS5_PROXY
get:
  name: SOCKS5_PROXY
  path: devops-secrets

---
kind: secret
name: REGISTRY_USER_ALIYUN
get:
  name: REGISTRY_USER_ALIYUN
  path: devops-secrets

---
kind: secret
name: REGISTRY_PASSWORD_ALIYUN
get:
  name: REGISTRY_PASSWORD_ALIYUN
  path: devops-secrets

---
kind: secret
name: S3_ACCESS_KEY_ALIYUN
get:
  name: S3_ACCESS_KEY_ALIYUN
  path: devops-secrets

---
kind: secret
name: S3_SECRET_KEY_ALIYUN
get:
  name: S3_SECRET_KEY_ALIYUN
  path: devops-secrets

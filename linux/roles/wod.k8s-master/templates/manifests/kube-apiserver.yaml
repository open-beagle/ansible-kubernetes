apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
  labels:
    k8s-app: kube-apiserver 
    app.bd-apaas.com/cluster-component: core
spec:
  hostNetwork: true
  priorityClassName: system-cluster-critical
  containers:
  - name: kube-apiserver
    image: {{ REGISTRY_LOCAL }}/{{ K8S_IMAGES['KUBE-APISERVER']['NAME'] }}:{{ K8S_IMAGES['KUBE-APISERVER']['VERSION'] }}{{ "-%s" | format(K8S_ARCH) | replace("-amd64", "") }}
    imagePullPolicy: IfNotPresent
    command:
    - kube-apiserver
    - --allow-privileged=true
    - --authorization-mode=Node,RBAC
    - --bind-address=0.0.0.0
    - --enable-admission-plugins=PersistentVolumeClaimResize,NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,MutatingAdmissionWebhook,ValidatingAdmissionWebhook
    - --enable-bootstrap-token-auth=true
    - --service-cluster-ip-range={{ K8S_SERVICE_IP_RANGE }}
    - --service-node-port-range={{ K8S_SERVICE_PORT_RANGE }}
    - --secure-port={{ K8S_MASTER_PORT }}
    - --tls-cert-file=/etc/kubernetes/ssl/apiserver.crt
    - --tls-private-key-file=/etc/kubernetes/ssl/apiserver.key
    - --client-ca-file=/etc/kubernetes/ssl/ca.crt
    - --service-account-issuer=https://kubernetes.default.svc.cluster.local
    - --service-account-key-file=/etc/kubernetes/ssl/apiserver.pub
    - --service-account-signing-key-file=/etc/kubernetes/ssl/apiserver.key
    - --kubelet-client-certificate=/etc/kubernetes/ssl/admin.crt
    - --kubelet-client-key=/etc/kubernetes/ssl/admin.key
    - --kubelet-preferred-address-types=InternalIP,ExternalDNS,ExternalIP
    - --runtime-config=extensions/v1beta1=true,extensions/v1beta1/networkpolicies=true,rbac.authorization.k8s.io/v1beta1=true
    - --token-auth-file=/etc/kubernetes/ssl/token.csv
    - --proxy-client-cert-file=/etc/kubernetes/ssl/admin.crt
    - --proxy-client-key-file=/etc/kubernetes/ssl/admin.key
    - --requestheader-allowed-names=front-proxy-client
    - --requestheader-client-ca-file=/etc/kubernetes/ssl/ca.crt
    - --requestheader-extra-headers-prefix=X-Remote-Extra-
    - --requestheader-group-headers=X-Remote-Group
    - --requestheader-username-headers=X-Remote-User
    - --etcd-cafile=/etc/kubernetes/ssl/etcd/ca.crt
    - --etcd-certfile=/etc/kubernetes/ssl/etcd/apiserver-etcd-client.crt
    - --etcd-keyfile=/etc/kubernetes/ssl/etcd/apiserver-etcd-client.key
    - --etcd-servers=https://127.0.0.1:2379
    ports:
    - containerPort: {{ K8S_MASTER_PORT }}
      name: https
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /livez
        port: {{ K8S_MASTER_PORT }}
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    name: kube-apiserver
    readinessProbe:
      failureThreshold: 3
      httpGet:
        host: 127.0.0.1
        path: /readyz
        port: {{ K8S_MASTER_PORT }}
        scheme: HTTPS
      periodSeconds: 1
      timeoutSeconds: 15
    resources:
      requests:
        cpu: 250m
    startupProbe:
      failureThreshold: 24
      httpGet:
        host: 127.0.0.1
        path: /livez
        port: {{ K8S_MASTER_PORT }}
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    volumeMounts:
    - mountPath: /etc/ssl/certs
      name: ca-certs
      readOnly: true
    - mountPath: /etc/ca-certificates
      name: etc-ca-certificates
      readOnly: true
    - mountPath: /etc/pki
      name: etc-pki
      readOnly: true
    - mountPath: /etc/kubernetes/ssl
      name: k8s-certs
      readOnly: true
    - mountPath: /etc/kubernetes/config
      name: k8s-config
      readOnly: true
    - mountPath: /usr/local/share/ca-certificates
      name: usr-local-share-ca-certificates
      readOnly: true
    - mountPath: /usr/share/ca-certificates
      name: usr-share-ca-certificates
      readOnly: true
  hostNetwork: true
  priorityClassName: system-node-critical
  volumes:
  - hostPath:
      path: /etc/ssl/certs
      type: DirectoryOrCreate
    name: ca-certs
  - hostPath:
      path: /etc/ca-certificates
      type: DirectoryOrCreate
    name: etc-ca-certificates
  - hostPath:
      path: /etc/pki
      type: DirectoryOrCreate
    name: etc-pki
  - hostPath:
      path: /etc/kubernetes/ssl
      type: DirectoryOrCreate
    name: k8s-certs
  - hostPath:
      path: /etc/kubernetes/config
      type: DirectoryOrCreate
    name: k8s-config
  - hostPath:
      path: /usr/local/share/ca-certificates
      type: DirectoryOrCreate
    name: usr-local-share-ca-certificates
  - hostPath:
      path: /usr/share/ca-certificates
      type: DirectoryOrCreate
    name: usr-share-ca-certificates
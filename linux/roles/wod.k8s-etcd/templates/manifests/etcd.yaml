apiVersion: v1
kind: Pod
metadata:
  name: etcd
  namespace: kube-system
  annotations:
    kubeadm.kubernetes.io/etcd.advertise-client-urls: https://{{ HOST_IP }}:2379
  labels:
    k8s-app: etcd
    app.bd-apaas.com/cluster-component: core
spec:
  hostNetwork: true
  priorityClassName: system-node-critical
  volumes:
  - hostPath:
      path: /etc/kubernetes/ssl/etcd
      type: DirectoryOrCreate
    name: etcd-certs
  - hostPath:
      path: /etc/kubernetes/data/etcd
      type: DirectoryOrCreate
    name: etcd-data
  containers:
  - name: etcd
    image: {{ REGISTRY_LOCAL }}/{{ K8S_IMAGES['ETCD']['NAME'] }}:{{ K8S_IMAGES['ETCD']['VERSION'] }}{{ "-%s" | format(K8S_ARCH) | replace("-amd64", "") }}
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /health
        port: 2381
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    resources:
      requests:
        cpu: 100m
        ephemeral-storage: 100Mi
        memory: 100Mi
    startupProbe:
      failureThreshold: 24
      httpGet:
        host: 127.0.0.1
        path: /health
        port: 2381
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    volumeMounts:
    - mountPath: /etc/kubernetes/data/etcd
      name: etcd-data
    - mountPath: /etc/kubernetes/ssl/etcd
      name: etcd-certs
    command:
    - etcd
    - --snapshot-count=10000
    - --listen-metrics-urls=http://0.0.0.0:2381
    - --data-dir=/etc/kubernetes/data/etcd
    - --client-cert-auth=true
    - --key-file=/etc/kubernetes/ssl/etcd/server.key
    - --cert-file=/etc/kubernetes/ssl/etcd/server.crt
    - --trusted-ca-file=/etc/kubernetes/ssl/etcd/ca.crt
    - --peer-client-cert-auth=true
    - --peer-key-file=/etc/kubernetes/ssl/etcd/peer.key
    - --peer-cert-file=/etc/kubernetes/ssl/etcd/peer.crt
    - --peer-trusted-ca-file=/etc/kubernetes/ssl/etcd/ca.crt
    - --name={{ inventory_hostname }}
    - --initial-advertise-peer-urls=https://{{ HOST_IP }}:2380
    - --listen-peer-urls=https://{{ HOST_IP }}:2380
    - --advertise-client-urls=https://{{ HOST_IP }}:2379
    - --listen-client-urls=https://127.0.0.1:2379,https://{{ HOST_IP }}:2379
{% if groups['master'] | length > 1 %}
    - --initial-cluster-state=new
    - --initial-cluster-token=beagle
    - --initial-cluster={% for host in groups['master'] %}{{ host }}=https://{{ hostvars[host]['ansible_facts'][IFACE]['ipv4']['address'] }}:2380{% if loop.last %}{% else %},{% endif %}{% endfor %}
{% endif %}
